{
  "version": 3,
  "sources": ["../keystone.ts", "../schema.ts", "../auth.ts", "../extensions.ts"],
  "sourcesContent": ["import {config} from '@keystone-6/core'\nimport {lists} from './schema'\nimport {withAuth, session} from './auth'\nimport 'dotenv/config'\n\nimport extendApp from './extensions'\n\nconst port = process.env.PORT ? parseInt(process.env.PORT) : 3000\n\nconst apiUrl = process.env.API_URL || `http://localhost:${port}`\n\nexport default withAuth(\n  config({\n    db: {\n      provider: 'sqlite',\n      url: process.env.DB_URL!\n    },\n    lists,\n    session,\n    storage: {\n      localImages: {\n        kind: 'local',\n        type: 'image',\n        generateUrl: path => `${apiUrl}/images${path}`,\n        serverRoute: {\n          path: '/images'\n        },\n        storagePath: 'storage/localImages'\n      }\n    },\n    server: {\n      cors: {origin: [process.env.CLIENT_URL!], credentials: true},\n      port: port,\n      extendExpressApp: app => extendApp(app)\n    }\n  })\n)\n", "import {list} from '@keystone-6/core'\nimport {allowAll} from '@keystone-6/core/access'\nimport {relationship, image, text, password, timestamp, select, checkbox, calendarDay} from '@keystone-6/core/fields'\nimport {document} from '@keystone-6/fields-document'\n\nimport type {Lists} from '.keystone/types'\n\nexport const lists: Lists = {\n  User: list({\n    access: allowAll,\n    fields: {\n      name: text({validation: {isRequired: true}}),\n      email: text({\n        validation: {isRequired: true},\n        isIndexed: 'unique'\n      }),\n      password: password({validation: {isRequired: true}}),\n      createdAt: timestamp({\n        defaultValue: {kind: 'now'}\n      }),\n      isAdmin: checkbox()\n    }\n  }),\n  Announcement: list({\n    access: allowAll,\n    fields: {\n      text: text({validation: {isRequired: true}}),\n      colour: select({\n        type: 'string',\n        options: [\n          {label: 'Red', value: 'red'},\n          {label: 'Orange', value: 'orange'},\n          {label: 'Yellow', value: 'yellow'},\n          {label: 'Green', value: 'green'},\n          {label: 'Blue', value: 'blue'},\n          {label: 'Violet', value: 'violet'}\n        ],\n        defaultValue: 'blue',\n        validation: {isRequired: true}\n      }),\n      active: checkbox({defaultValue: true})\n    }\n  }),\n  About: list({\n    access: allowAll,\n    isSingleton: true,\n    fields: {\n      content: document({\n        formatting: true\n      })\n    }\n  }),\n  Burial: list({\n    access: allowAll,\n    isSingleton: true,\n    fields: {\n      content: document({\n        formatting: true\n      })\n    }\n  }),\n  GalleryTag: list({\n    access: allowAll,\n    fields: {\n      tagName: text({validation: {isRequired: true}})\n    }\n  }),\n  GalleryImage: list({\n    access: allowAll,\n    fields: {\n      image: image({storage: 'localImages'}),\n      caption: text({validation: {isRequired: true, length: {max: 100}}}),\n      author: text({validation: {isRequired: true}}),\n      dateTaken: calendarDay({validation: {isRequired: true}}),\n      tags: relationship({\n        ref: 'GalleryTag',\n        many: true,\n        ui: {\n          labelField: 'tagName'\n        }\n      })\n    }\n  })\n}\n", "import {randomBytes} from 'crypto'\nimport {createAuth} from '@keystone-6/auth'\nimport {statelessSessions} from '@keystone-6/core/session'\n\nlet sessionSecret = process.env.SESSION_SECRET\nif (!sessionSecret && process.env.NODE_ENV !== 'production') {\n  sessionSecret = randomBytes(32).toString('hex')\n}\n\nconst {withAuth} = createAuth({\n  listKey: 'User',\n  identityField: 'email',\n  sessionData: 'name createdAt',\n  secretField: 'password',\n  initFirstItem: {\n    fields: ['name', 'email', 'password']\n  }\n})\n\nconst sessionMaxAge = 60 * 60 * 24 * 30\n\nconst session = statelessSessions({\n  maxAge: sessionMaxAge,\n  secret: sessionSecret!,\n  secure: false\n})\n\nexport {withAuth, session}\n", "import express from 'express'\nimport nodemailer from 'nodemailer'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\n\nexport default function extendApp(app: express.Express) {\n  app.use(bodyParser.json())\n\n  const transport = nodemailer.createTransport({\n    service: 'gmail',\n    auth: {\n      user: process.env.SMTP_USER,\n      pass: process.env.SMTP_PASSWORD\n    }\n  })\n\n  const corsOpts: cors.CorsOptions = {\n    origin: (origin: string | undefined, callback: Function) => {\n      if (origin === process.env.CLIENT_URL) {\n        callback(null, true)\n      } else {\n        callback('Error: origin not allowed by CORS')\n      }\n    }\n  }\n\n  /* nodemailer message endpoint */\n  app.post('/send-message', cors(corsOpts), async (req, res) => {\n    const {to, subject, html} = req.body\n    const from = `${process.env.SENDER_NAME} <${process.env.SENDER_ADDR}>`\n    const mail: nodemailer.SendMailOptions = {from, to, subject, html}\n\n    transport.sendMail(mail, error => {\n      if (error) {\n        console.log(error)\n        return res.sendStatus(500)\n      }\n      console.log(`Message sent to ${to}`)\n    })\n\n    return res.sendStatus(200)\n  })\n}\n"],
  "mappings": "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",
  "names": ["import_core", "bodyParser", "nodemailer", "cors"]
}
